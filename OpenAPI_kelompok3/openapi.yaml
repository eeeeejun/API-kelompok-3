openapi: '3.0.2'
info:
  title: Dokumentasi Open API
  description: Tugas membuat open API.
  termsOfService: https://example.com/terms/
  contact:
    name: API Support
    url: https://github.com/
    email: kelompok3@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1

servers:
- url: https://8rgwcczk-80.asse.devtunnels.ms/{envoirment}
  description: API server
  variables:
    envoirment:
      description: 'gdfadfa'
      enum:
        - 'API2024/OpenAPI_kelompok3'
        - 'staging'
        - 'production'
      default: 'API2024/OpenAPI_kelompok3'
    port:
      enum:
        - '80'
        - '3000'
        - '8012'
      default: '80'

paths:
  /notes:
    get:
      tags:
        - Mahasiswa
      summary: 'Nama Mahasiswa'
      description: Dapatkan nama mahasiswa
      responses:
        '200':
          description: list mahasiswa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mahasiswa'
        default:
          description: error payload
          content:
            'text/html':
              schema:
                $ref: '#/components/schemas/GeneralError'
    post:
      tags:
        - Mahasiswa
      summary: tambahkan mahasiswa
      description: tambahkan mahasiswa yang dapat user akses
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              properties:
                  nama:
                    description: Create new note
                    type: string
              required:
                - nama
      responses:
        '200':
          description: Note Created.
          content:
            'application/json': {}
            'application/xml': {}
        '405':
          description: Method Not Allowed
          content:
            'application/json': {}
            'application/xml': {}

    put:
      tags:
        - Mahasiswa
      summary: Mengedit mahasiswa
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              properties:
                id:
                  type: integer
                nama:
                  type: string
              required:
                - id
                - nama

      responses:
        '200':
          description: mahasiswa berhasil diupdate
          content:
            application/json:
              example:
                message: mahasiswa berhasil diupdate
        '400':
          description: Permintaan tidak valid
          content:
            application/json:
              example:
                message: Gagal mengedit mahasiswa, permintaan tidak valid
        '404':
          description: mahasiswa tidak ditemukan
          content:
            application/json:
              example:
                message: Gagal mengedit mahasiswa, mahasiswa tidak ditemukan
          
    delete:
      tags:
        - Mahasiswa
      summary: hapus mahasiswa
      description: hapus mahasiswa melalui id
      parameters:
      - name: hapus
        in: query
        schema:
          type: boolean
      - name: id_awal
        in: query
        description: id_awal
        required: false
        schema:
          type: integer
      - name: id_akhir
        in: query
        required: false
        schema:
          type: integer
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema: 
              type: object
              properties:
                id:
                  type: integer
            encoding:
              historyMetadata:
                contentType: application/xml; charset=utf-8
      responses:
        '200':
          description: mahasiswa berhasil dihapus
        '400': 
          description: id tidak valid
        '401':
          description: mahasiswa tidak ditemukan
        '402':
          description: mahasiswa tidak dapat diakses


components:
  schemas:
    GeneralError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    mahasiswa:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mahasiswa:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

  parameters:
    skipParam:
      name: skip
      in: query
      description: number of items to skip
      required: true
      schema:
        type: integer
        format: int32
    limitParam:
      name: limit
      in: query
      description: max records to return
      required: true
      schema:
        type: integer
        format: int32
  responses:
    NotFound:
      description: Entity not found.
    IllegalInput:
      description: Illegal input for operation.
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'




  
